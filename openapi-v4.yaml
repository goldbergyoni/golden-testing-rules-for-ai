components:
  schemas:
    CreateTicketRequest:
      additionalProperties: false
      properties:
        expiration:
          description: The expiration date and time of the ticket
          format: date-time
          type: string
        sellerId:
          description: The ID of the seller
          type: string
        ticketTitle:
          description: The title of the ticket
          pattern: ^.*:+.*$
          type: string
      required:
      - ticketTitle
      type: object
    CreateTicketResponseAccepted:
      additionalProperties: false
      properties:
        barcodeLink:
          type: string
        numOfTickets:
          maximum: 25
          minimum: 1
          type: integer
        status:
          enum:
          - accepted
          type: string
      required:
      - status
      - barcodeLink
      type: object
    CreateTicketResponseOther:
      additionalProperties: false
      properties:
        status:
          enum:
          - disabledSeller
          type: string
      required:
      - status
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: API for managing user tickets
  title: Ticket Management API
  version: 1.0.0
openapi: 3.0.3
paths:
  /users/{userId}/tickets/:
    delete:
      description: This endpoint deletes a ticket for the specified user by userId.
      operationId: deleteUserByUserIdTicket
      parameters:
      - description: The ID of the user
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: The ID of the ticket
        in: path
        name: ticketId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Ticket deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Ticket not found
      security:
      - bearerAuth: []
      summary: Delete a ticket for a specific user
    post:
      description: This endpoint creates a new ticket for a specified user.
      operationId: postUserByUserIdTickets
      parameters:
      - description: The ID of the user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                accepted:
                  value: "{\n  \"status\" : \"accepted\",\n  \"barcodeLink\" : \"\
                    exampleBarcodeLink\",\n  \"numOfTickets\" : 20\n}"
                disabledSeller:
                  value: "{\n  \"status\" : \"disabledSeller\"\n}"
              schema:
                oneOf:
                - $ref: '#/components/schemas/CreateTicketResponseAccepted'
                - $ref: '#/components/schemas/CreateTicketResponseOther'
          description: Create a new ticket - accepted
        '401':
          description: Unauthorized
      security:
      - bearerAuth: []
      summary: Create a new ticket
security:
- bearerAuth: []
servers:
- url: https://user-service.wiremockapi.cloud
